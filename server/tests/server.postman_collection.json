{
	"info": {
		"_postman_id": "9e07ffe8-182f-4379-98f5-09360450a71d",
		"name": "test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37686512",
		"_collection_link": "https://group08.postman.co/workspace/group08-Workspace~58ff352a-546b-49cd-a5e8-b697b0fb499d/collection/37686512-9e07ffe8-182f-4379-98f5-09360450a71d?action=share&source=collection_link&creator=37686512"
	},
	"item": [
		{
			"name": "http://localhost:3000/api/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 201\", function () {",
							"  pm.expect(pm.response.code).to.equal(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"riley\", \r\n    \"password\": \"Food\",\r\n    \"birthDate\": \"2003/09/28\",\r\n    \"isLGBTQIA\": false,\r\n    \"gender\": \"female\",\r\n    \"isAdmin\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/users/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"renaa\",\r\n    \"password\": \"Food\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "rome",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe8bcd48ec0ddf42485788",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cityName\": \"heh\",\r\n    \"country\": \"Italy\",\r\n    \"statistics\": \"The capital of Italy\",\r\n    \"facts\": \"Many historical landmarks to see like the colosseum\",\r\n    \"tags\": [\"historical\", \"cheap\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/cities",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cities"
					]
				}
			},
			"response": []
		},
		{
			"name": "the louvre",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe8bcd48ec0ddf42485788",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/cities/66fe8bd948ec0ddf4248578d/placesToVisit",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cities",
						"66fe8bd948ec0ddf4248578d",
						"placesToVisit"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe8bcd48ec0ddf42485788",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "all places",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"  pm.expect(pm.response.code).to.equal(404);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required Content-Type header with value application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Error message is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.error).to.exist.and.to.be.a('string');",
							"});",
							"",
							"",
							"pm.test(\"Error message is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.error).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Error message should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe8bcd48ec0ddf42485788",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/places",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"places"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all cities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/cities",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cities"
					]
				}
			},
			"response": []
		},
		{
			"name": "get specific place in city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/places/gbg, NY 10024, USA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"places",
						"gbg, NY 10024, USA"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/cities/66ec330efd172d45e039cda4/placesToVisit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/cities/66ec330efd172d45e039cda4/placesToVisit",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cities",
						"66ec330efd172d45e039cda4",
						"placesToVisit"
					]
				}
			},
			"response": []
		},
		{
			"name": "router.get('/:id/placesToVisit/:address', citiesControllers.getOnePlaceFromCity);",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/cities/66f024aae3d4c7250d101203/placesToVisit/lindholmen",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cities",
						"66f024aae3d4c7250d101203",
						"placesToVisit",
						"lindholmen"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid postcode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 400\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/cities/6969",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cities",
						"6969"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin deletes place",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test('Response status code is 404', function () {",
							"    pm.expect(pm.response.code).to.equal(404);",
							"})",
							"",
							"pm.test('Response has the required fields', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.message).to.exist;",
							"})",
							"",
							"pm.test('Message is a non-empty string', function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Message should not be empty');",
							"})",
							"",
							"pm.test('Content-Type header is application/json', function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe8bcd48ec0ddf42485788",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/placesToVisit/Forskningsgången",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"placesToVisit",
						"Forskningsgången"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin deletes lanaDrey",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe8e4aad7f905f7a1f57fc",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/user/a",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"user",
						"a"
					]
				}
			},
			"response": []
		},
		{
			"name": "router.patch('/:username', usersControllers.patchUser);",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe9299d3f4a305a477d7b4",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"strong\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/pp",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"pp"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin deletes city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe950f58c11835a2d97426",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "http://localhost:3000/api/users/cities/66f1aae45229be95c7530968",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"cities",
						"66f1aae45229be95c7530968"
					]
				}
			},
			"response": []
		},
		{
			"name": "router.delete('/:username', usersControllers.deleteOneUser);",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"  pm.expect(pm.response.code).to.equal(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe950f58c11835a2d97426",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/renaa",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"renaa"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/places/New York, NY 10024, USA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe950f58c11835a2d97426",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/places/New York, NY 10024, USA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"places",
						"New York, NY 10024, USA"
					]
				}
			},
			"response": []
		},
		{
			"name": "router.put('/:username', usersControllers.updateUser);",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe950f58c11835a2d97426",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/miley",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"miley"
					]
				}
			},
			"response": []
		},
		{
			"name": "New York, NY 10024, USA to gbg, NY 10024, USA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe950f58c11835a2d97426",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/places/New York, NY 10024, USA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"places",
						"New York, NY 10024, USA"
					]
				}
			},
			"response": []
		},
		{
			"name": "gbg, NY 10024, USA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe950f58c11835a2d97426",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/places/New York, NY 10024, USA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"places",
						"New York, NY 10024, USA"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid postcode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe950f58c11835a2d97426",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cityName\": \"Gothenburg\",\r\n    \"country\": \"Sweden\",\r\n    \"statistics\": \"2nd largest city in Sweden\",\r\n    \"facts\": \"has trams\",\r\n    \"tags\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/cities/66ec330efd172d45e039cda4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cities",
						"66ec330efd172d45e039cda4"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid postcode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe950f58c11835a2d97426",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/cities/66ec330efd172d45e039cda4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cities",
						"66ec330efd172d45e039cda4"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid postcode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fe950f58c11835a2d97426",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/cities/66ec330efd172d45e039cda4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cities",
						"66ec330efd172d45e039cda4"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/users/stavel/favorites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fea91144baca270f72997d",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cityId\": \"66fea3dc9ae975f518fb29ec\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/mimy/favorites",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"mimy",
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/users/mimy/favorites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fea91144baca270f72997d",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/mimy/favorites",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"mimy",
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/users/mimy/favorites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-auth-token",
						"value": "66fea91144baca270f72997d",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": \"gothenburg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/mimy/favorites",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"mimy",
						"favorites"
					]
				}
			},
			"response": []
		}
	]
}